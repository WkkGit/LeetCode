package coding_interviews.q62_圆圈中最后剩下的数字;

/**
    0,1,,n-1这n个数字排成一个圆圈，从数字0开始，每次从这个圆圈里删除第m个数字。求出这个圆圈里剩下的最后一个数字。
    例如，0、1、2、3、4这5个数字组成一个圆圈，从数字0开始每次删除第3个数字，则删除的前4个数字依次是2、0、4、1，因此最后剩下的数字是3。
 */
/*
    这里最后返回的结果其实是数组下标，只是刚好数组下标等于对应元素
    约瑟夫环问题，套公式进行倒推即可：
    f(n,m) = (f(n-1,m)+m) % n;
    f(1) = 0;
 */
public class Solution {
    public int lastRemaining(int n, int m) {
        /*
            约瑟夫环问题，由数学公式推导
            f(n,m) = (f(n-1,m)+m) % n;
            数组长度为1的时候，存活元素下标即为0
            f(1) = 0;
         */
        // 定义f(1)
        int res = 0;
        // 从f(2)开始倒推
        for(int i = 2; i <= n ; i ++){
            res = (res + m) % i;
        }
        return res;
    }
}
